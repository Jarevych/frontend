{"version":3,"file":"static/js/508.df802339.chunk.js","mappings":"+PAEMA,EAAU,qCAET,SAAeC,IAAU,OAAAC,EAAAC,MAAC,KAADC,UAAA,CAY/B,SAAAF,IAAA,OAAAA,GAAAG,EAAAA,EAAAA,GAAAC,IAAAA,MAZM,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEoBC,EAAAA,EAAAA,IAAU,GAADC,OAAIb,IAAW,KAAD,EAAhC,GAEU,OAFlBQ,EAAQC,EAAAK,MAEDC,OAAc,CAAAN,EAAAE,KAAA,cACnB,IAAIK,MAAM,sCAAsC,KAAD,EAE5B,OAA3BC,QAAQC,IAAIV,EAASW,MAAMV,EAAAW,OAAA,SACpBZ,EAASW,MAAI,cAAAV,EAAAC,KAAA,GAAAD,EAAAY,GAAAZ,EAAA,SAEd,IAAIO,MAAM,qCAAqC,KAAD,oBAAAP,EAAAa,OAAA,GAAAf,EAAA,oBAEvDJ,MAAA,KAAAC,UAAA,C,eCdYmB,E,OAAqBC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uyB,SCK7B,SAASC,IACtB,IAAAC,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,IAE9BI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAA/B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAA8B,EAAA,OAAA/B,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAESV,IAAa,KAAD,EAA7BoC,EAAQ5B,EAAAK,KACdmB,GAAa,SAACK,GAAQ,SAAAzB,QAAA0B,EAAAA,EAAAA,GAASD,IAAQC,EAAAA,EAAAA,GAAMF,EAASG,SAAW,IAAE,IACnEvB,QAAQC,IAAImB,GAAU5B,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAY,GAAAZ,EAAA,SAEtBQ,QAAQwB,MAAM,wBAAuBhC,EAAAY,IAAS,yBAAAZ,EAAAa,OAAA,GAAAf,EAAA,kBAEjD,kBARc,OAAA6B,EAAAjC,MAAA,KAAAC,UAAA,KASf+B,GACF,GAAG,IAEH,IAAMO,EAAWC,MAAMC,QAAQZ,IAAcA,EAAUa,OACvD,OACEC,EAAAA,EAAAA,MAACvB,EAAkB,CAAAwB,SAAA,EACjBC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYF,SAAC,oBAC3BC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWF,SACtBL,GACCV,EAAUkB,KAAI,SAACC,GAAS,OACtBH,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAE,WAAAxC,OAAasC,EAAUG,IAAKP,UAClCD,EAAAA,EAAAA,MAAA,MAAIG,UAAU,YAAWF,SAAA,EACvBC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYF,SACvBI,EAAUI,OAASJ,EAAUK,MAAQ,WAExCR,EAAAA,EAAAA,KAAA,OACES,IACEN,EAAUO,YAAW,mCAAA7C,OACkBsC,EAAUO,aAC7C,aAENC,MAAO,IACPC,IAAKT,EAAUI,OAASJ,EAAUK,MAAQ,eAZNL,EAAUG,GAe7C,QAKnB,C","sources":["api.js","pages/HomePageStyled.js","pages/HomePage.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:3001/api/products\";\n\nexport async function fetchLinen() {\n  try {\n    const responce = await axios.get(`${API_URL}`);\n\n    if (responce.status !== 200) {\n      throw new Error(\"There is now result for your query\");\n    }\n    console.log(responce.data);\n    return responce.data;\n  } catch (error) {\n    throw new Error(\"There is no result for your query\");\n  }\n}\n","import styled from 'styled-components';\n\nexport const StyledAppContainer = styled.div`\n  // .searchbutton {\n  //   position: absolute;\n  //   height: 38px;\n  //   background: none;\n  //   border: none;\n  // }\n  \n  .movielist {\n    display: flex;\n    justify-content: center;\n    gap: 20px;\n    flex-wrap: wrap;\n    padding: 0;\n  }\n  .movieitem {\n    display: flex;\n    flex-direction: column;\n  }\n  .movietitle {\n    max-width: 250px;\n  }\n  .page-title {\n    text-align: center;\n  }\n  .searchbtn {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  padding: 0 20px;\n  margin: 10px;\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  text-decoration: none;\n  cursor: pointer;\n  // width: 72px;\n  height: 34px;\n  margin-bottom: 20px;\n  &:hover {\n    background-color: #0056b3;\n\n  }\n  \n`;\n","import { useState, useEffect } from \"react\";\n// import styled from 'styled-components';\nimport { Link } from \"react-router-dom\";\n\nimport { fetchLinen } from \"../api\";\nimport { StyledAppContainer } from \"./HomePageStyled\";\n\nexport default function HomePage() {\n  const [linenList, setLinenList] = useState([]);\n\n  useEffect(() => {\n    const getLinens = async () => {\n      try {\n        const response = await fetchLinen();\n        setLinenList((prevList) => [...prevList, ...(response.results || [])]);\n        console.log(response);\n      } catch (error) {\n        console.error(\"Error fetching linen:\", error);\n      }\n    };\n    getLinens();\n  }, []);\n\n  const linenArr = Array.isArray(linenList) && linenList.length;\n  return (\n    <StyledAppContainer>\n      <h2 className=\"page-title\">Trending today</h2>\n      <ul className=\"movielist\">\n        {linenArr &&\n          linenList.map((linenItem) => (\n            <Link to={`/movies/${linenItem.id}`} key={linenItem.id}>\n              <li className=\"movieitem\">\n                <h3 className=\"movietitle\">\n                  {linenItem.title || linenItem.name || \"movie\"}\n                </h3>\n                <img\n                  src={\n                    linenItem.poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${linenItem.poster_path}`\n                      : \"defaultImg\" // Замініть \"defaultImg\" на ваш шлях до дефолтного зображення\n                  }\n                  width={250}\n                  alt={linenItem.title || linenItem.name || \"poster\"}\n                />\n              </li>\n            </Link>\n          ))}\n      </ul>\n    </StyledAppContainer>\n  );\n}\n"],"names":["API_URL","fetchLinen","_fetchLinen","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","responce","_context","prev","next","axios","concat","sent","status","Error","console","log","data","abrupt","t0","stop","StyledAppContainer","styled","_templateObject","_taggedTemplateLiteral","HomePage","_useState","useState","_useState2","_slicedToArray","linenList","setLinenList","useEffect","getLinens","_ref","response","prevList","_toConsumableArray","results","error","linenArr","Array","isArray","length","_jsxs","children","_jsx","className","map","linenItem","Link","to","id","title","name","src","poster_path","width","alt"],"sourceRoot":""}